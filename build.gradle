buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://sandec.bintray.com/repo"
        }
    }
    dependencies {
        classpath 'org.openjfx:javafx-plugin:0.0.8'
        classpath 'org.beryx:badass-jlink-plugin:2.16.4'
        classpath 'com.sandec.jpro:jpro-plugin-gradle:2019.2.3'
    }
}
plugins {
    id 'java-library'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.beryx.jlink' version '2.16.4'
}
apply plugin: 'com.sandec.jpro'
group 'eu.hansolo.spacefx'
version '1.0-SNAPSHOT'
repositories {
    mavenCentral()
}
sourceCompatibility = 11
targetCompatibility = 11
dependencies {
    implementation "com.sandec.jpro:jpro-webapi:2019.2.3"
    implementation "one.jpro:one.jpro.sound:0.1.0"
    testCompile 'junit:junit:4.12'
    testCompile "de.sandec:JMemoryBuddy:0.2.4"
    testCompile("org.testfx:openjfx-monocle:jdk-11+26") {
        exclude group: 'org.openjfx'
    }
}
test {
    jvmArgs = ['-Dglass.platform=Monocle', '-Dmonocle.platform=Headless']
}
mainClassName = "$moduleName/eu.hansolo.spacefx.SpaceFX"
// To run SpaceFX in the browser with jPro use:
task web() {
    mainClassName = "eu.hansolo.spacefx.SpaceFX"
    dependsOn jproRun
}
javafx {
    version = "14.0.1"
    modules = [ 'javafx.controls', 'javafx.media' ]
// sdk="/tmp/javafx-sdk-15"
}
jar {
    from {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        configurations.runtimeClasspath.collect {  it.isDirectory() ? it : zipTree(it)  }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
        attributes ('Implementation-Title': 'SpaceFX',
                    'Class-Path': 'SpaceFX-1.0-SNAPSHOT.jar ',
                    'Main-Class': 'eu.hansolo.spacefx.Launcher')
    }
}
jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'eu.hansolo.spacefx'
    }
}
jpro {
    port             = 8080
    JVMArgs << '-Xmx1000m'
    visible          = false // Debug mode can also be used to create images via canvas and snapshot
    noRenderJobs     = true // false to enable snapshot support
    jproVersion      = "2019.2.3"
    openURLOnStartup = false
}
